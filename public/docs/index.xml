<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Citizen Science Center Zurich â€“ </title>
    <link>https://docs.citizenscience.ch/docs/</link>
    <description>Recent content on Citizen Science Center Zurich</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="https://docs.citizenscience.ch/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Object Storage</title>
      <link>https://docs.citizenscience.ch/docs/components/backend/storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/backend/storage/</guid>
      <description>
        
        
        

&lt;p&gt;Currently, a &lt;code&gt;Minio&lt;/code&gt; server is used to store media for tasks and submissions. Media uploaded here is linked in the &lt;code&gt;Media&lt;/code&gt; model (under &lt;code&gt;path&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The production URL for &lt;code&gt;Minio&lt;/code&gt; is: &lt;a href=&#34;https://objects.citizenscience.ch&#34;&gt;https://objects.citizenscience.ch&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;connecting&#34;&gt;Connecting&lt;/h2&gt;

&lt;p&gt;To connect, you will need an Access Key and a Secret. &lt;code&gt;Minio&lt;/code&gt; is S3 compatible, so it can be connected from any S3 library.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;vuex-c3s&lt;/code&gt; library has an &lt;code&gt;upload&lt;/code&gt; function that will upload directly from the web to Minio and insert a &lt;code&gt;Media&lt;/code&gt; record.&lt;/p&gt;

&lt;h2 id=&#34;running-locally&#34;&gt;Running Locally&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Minio&lt;/code&gt; can be run locally using &lt;code&gt;Docker&lt;/code&gt;, details can be found &lt;a href=&#34;https://docs.min.io/docs/minio-docker-quickstart-guide&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Server</title>
      <link>https://docs.citizenscience.ch/docs/components/backend/server/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/backend/server/</guid>
      <description>
        
        
        

&lt;p&gt;The backend server is built using the &lt;a href=&#34;https://github.com/zalando/connexion&#34;&gt;Connexion&lt;/a&gt; framework with the &lt;code&gt;Swagger&lt;/code&gt; and &lt;code&gt;OpenAPI&lt;/code&gt; specification. Detailed documentation for the API can be found in this section as well.&lt;/p&gt;

&lt;h2 id=&#34;development&#34;&gt;Development&lt;/h2&gt;

&lt;p&gt;Environment files are in the &lt;code&gt;config&lt;/code&gt; directory and should be symlinked to the root &lt;code&gt;.env&lt;/code&gt; file.&lt;/p&gt;

&lt;h3 id=&#34;setup&#34;&gt;Setup&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/citizensciencecenter/backend &amp;amp;&amp;amp; cd backend&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;virtualenv activate serv_env&lt;/code&gt; (Python 3)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;source serv_env/bin/activate&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git secret reveal&lt;/code&gt; (Make sure you have been added here)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ln -sf config/&amp;lt;YOUR_ENV&amp;gt;.cfg .env&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make local&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;makefile&#34;&gt;Makefile&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;make spec&lt;/code&gt; - Generate a new Openapi file to &lt;code&gt;openapi/cc.yaml&lt;/code&gt; (Requires speccy, &lt;code&gt;npm i -g speccy&lt;/code&gt;)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;make localdb&lt;/code&gt; - Create a local Postgres Docker container and expose&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;make swaggerui&lt;/code&gt; - Create a local Openapi explorer&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;make run&lt;/code&gt; - Run locally using your virtualenv&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;make test&lt;/code&gt; - Run pytest&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;make docker&lt;/code&gt; - Run using docker (can also use &lt;code&gt;make daemon&lt;/code&gt; to daemonise it)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure&#34;&gt;Structure&lt;/h2&gt;

&lt;h3 id=&#34;api&#34;&gt;API&lt;/h3&gt;

&lt;p&gt;Each folder represents a model that is accessible via the API and each contains a &lt;code&gt;Model&lt;/code&gt; and a &lt;code&gt;Custom&lt;/code&gt; file. &lt;code&gt;Model&lt;/code&gt; files handle all the REST operations on the &lt;code&gt;Model&lt;/code&gt; itself and &lt;code&gt;Custom&lt;/code&gt; has any extra operations.&lt;/p&gt;

&lt;p&gt;For example, &lt;code&gt;project/model.py&lt;/code&gt; will have &lt;code&gt;create_project&lt;/code&gt; and &lt;code&gt;project/custom.py&lt;/code&gt; will have  &lt;code&gt;get_random_project_tasks&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;activity&lt;/li&gt;
&lt;li&gt;comment&lt;/li&gt;
&lt;li&gt;importers - This folder is used to create importers for any model. Currently, only CSV is supported&lt;/li&gt;
&lt;li&gt;media&lt;/li&gt;
&lt;li&gt;member&lt;/li&gt;
&lt;li&gt;project&lt;/li&gt;
&lt;li&gt;project_group&lt;/li&gt;
&lt;li&gt;submission&lt;/li&gt;
&lt;li&gt;task&lt;/li&gt;
&lt;li&gt;user&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;db&#34;&gt;DB&lt;/h3&gt;

&lt;p&gt;Uses &lt;code&gt;Pony ORM&lt;/code&gt; to create models in the connected DB.&lt;/p&gt;

&lt;h3 id=&#34;decorators&#34;&gt;DECORATORS&lt;/h3&gt;

&lt;p&gt;This folder handles access checks or other prerequisites for methods. If something needs to be checked before an operation is performed, add it here.&lt;/p&gt;

&lt;h3 id=&#34;middleware&#34;&gt;MIDDLEWARE&lt;/h3&gt;

&lt;p&gt;Currently only used for the generic &lt;code&gt;ResponseHandler&lt;/code&gt; used throughout the API&lt;/p&gt;

&lt;h3 id=&#34;openapi-previously-called-swagger&#34;&gt;OPENAPI (Previously called swagger)&lt;/h3&gt;

&lt;p&gt;A collection of &lt;code&gt;yaml&lt;/code&gt; files used for &lt;code&gt;OpenAPI&lt;/code&gt;, the core spec is at &lt;code&gt;openapi/oapi.yaml&lt;/code&gt; but reads from files such as &lt;code&gt;openapi/schema.yaml&lt;/code&gt;. If you change &lt;strong&gt;anything&lt;/strong&gt; about the API, then that change should also be made here. For example, a change to the structure of a &lt;code&gt;POST&lt;/code&gt; body or a new endpoint.&lt;/p&gt;

&lt;h3 id=&#34;app-py&#34;&gt;APP.PY&lt;/h3&gt;

&lt;p&gt;Holds the code to start the application and handles the config.&lt;/p&gt;

&lt;h3 id=&#34;versions&#34;&gt;Versions&lt;/h3&gt;

&lt;h3 id=&#34;v2-master&#34;&gt;v2 - &lt;code&gt;master&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;v2&lt;/code&gt; is the API that runs all of the projects sites but is no longer in active use. It is the &lt;code&gt;master&lt;/code&gt; branch of the &lt;a href=&#34;https://github.com/citizensciencecenter/backend&#34;&gt;Backend&lt;/a&gt; repo and can be found &lt;a href=&#34;https://api.citizenscience.ch/api/v2/swagger.json&#34;&gt;here&lt;/a&gt;. The API explorer is &lt;a href=&#34;https://api.citizenscience.ch/explorer&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;v3-feature-openapi&#34;&gt;v3 - &lt;code&gt;feature/openapi&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;v3&lt;/code&gt; is the latest (currently in beta) version of the API that uses &lt;code&gt;OpenAPI&lt;/code&gt; (the successor to Swagger) and has a slightly different data model.&lt;/p&gt;

&lt;h3 id=&#34;data-model&#34;&gt;Data Model&lt;/h3&gt;

&lt;h4 id=&#34;summary&#34;&gt;Summary&lt;/h4&gt;

&lt;p&gt;A &lt;code&gt;User&lt;/code&gt; can create a &lt;code&gt;Project&lt;/code&gt; or a &lt;code&gt;Project Group&lt;/code&gt;. &lt;code&gt;Projects&lt;/code&gt; can be part of a &lt;code&gt;ProjectGroup&lt;/code&gt; or standalone. &lt;code&gt;Projects&lt;/code&gt; have &lt;code&gt;Tasks&lt;/code&gt; that can be open in their format. Users can add &lt;code&gt;Submissions&lt;/code&gt; to &lt;code&gt;Tasks&lt;/code&gt;.
&lt;code&gt;Media&lt;/code&gt; can be added to any model in the database.&lt;/p&gt;

&lt;h4 id=&#34;upcoming-changes&#34;&gt;Upcoming Changes&lt;/h4&gt;

&lt;p&gt;Currently, only the owner of a project can make certain changes, but there is &lt;code&gt;Role&lt;/code&gt; and &lt;code&gt;Members&lt;/code&gt; that is in the implementation phase.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Static Sites</title>
      <link>https://docs.citizenscience.ch/docs/deployment/static/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/deployment/static/</guid>
      <description>
        
        
        

&lt;p&gt;All static sites are hosted by &lt;code&gt;now.sh&lt;/code&gt; and require you to be a member of the &lt;a href=&#34;https://zeit.co/c3s&#34;&gt;team&lt;/a&gt;. Please contact someone at the center to get access.&lt;/p&gt;

&lt;h2 id=&#34;installing&#34;&gt;Installing&lt;/h2&gt;

&lt;p&gt;To deploy, you will need the &lt;code&gt;now CLI&lt;/code&gt; and, to get it, you will need a recent version of &lt;code&gt;npm&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g now@latest
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you can run &lt;code&gt;now teams ls&lt;/code&gt; to be sure you are part of &lt;code&gt;c3s&lt;/code&gt; and then &lt;code&gt;now switch c3s&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;deploying&#34;&gt;Deploying&lt;/h2&gt;

&lt;p&gt;To deploy a site, simply run &lt;code&gt;now&lt;/code&gt; in the root directory or &lt;code&gt;npm run deploy&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;production&#34;&gt;Production&lt;/h3&gt;

&lt;p&gt;As our sites perform prerendering, you will need to build the site on your development machine with &lt;code&gt;npm run build&lt;/code&gt;. Once built, enter the &lt;code&gt;dist&lt;/code&gt; directory (or wherever you have configured to build to) and run &lt;code&gt;now --prod&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;config&#34;&gt;Config&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Now&lt;/code&gt; is designed to be minimal config but some may still be needed. You can provide a &lt;code&gt;now.json&lt;/code&gt;, which may look like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;project-builder&amp;quot;,
  &amp;quot;version&amp;quot;: 2,
  &amp;quot;builds&amp;quot;: [
    {
      &amp;quot;src&amp;quot;: &amp;quot;package.json&amp;quot;,
      &amp;quot;use&amp;quot;: &amp;quot;@now/static-build&amp;quot;
    }
  ],
  &amp;quot;routes&amp;quot;: [
    {
      &amp;quot;src&amp;quot;: &amp;quot;/(js|css|img)/.*&amp;quot;,
      &amp;quot;headers&amp;quot;: { &amp;quot;cache-control&amp;quot;: &amp;quot;max-age=31536000, immutable&amp;quot; }
    },
    { &amp;quot;handle&amp;quot;: &amp;quot;filesystem&amp;quot; },
    { &amp;quot;src&amp;quot;: &amp;quot;.*&amp;quot;, &amp;quot;dest&amp;quot;: &amp;quot;/&amp;quot; }
  ],
  &amp;quot;alias&amp;quot;: &amp;quot;project-builder.staging.citizenscience.ch&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This file would build the site on deployment. Removing the &lt;code&gt;builds&lt;/code&gt; section will then deploy just a static site. The file &lt;strong&gt;MUST&lt;/strong&gt; be in the directory you want now to run from. For example, one in the root directory and one in your &lt;code&gt;dist&lt;/code&gt; directory.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Citizen Science Home</title>
      <link>https://docs.citizenscience.ch/docs/components/frontend/sites/citizenscience/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/frontend/sites/citizenscience/</guid>
      <description>
        
        
        &lt;p&gt;API Version: v2
Deployment Method: now&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Javascript To SQL</title>
      <link>https://docs.citizenscience.ch/docs/components/libraries/jtos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/libraries/jtos/</guid>
      <description>
        
        
        

&lt;h1 id=&#34;jtos&#34;&gt;JTOS&lt;/h1&gt;

&lt;p&gt;JSON to SQL. Inspired by the Loopback Query Language, this is a standalone Python library to convert JSON objects to SQL.&lt;/p&gt;

&lt;h2 id=&#34;building-and-deploying&#34;&gt;Building and Deploying&lt;/h2&gt;

&lt;p&gt;The project is hosted on PyPi, contact &lt;a href=&#34;mailto:chris@gwillia.ms&#34;&gt;Chris&lt;/a&gt; to become collaborator and make changes.&lt;/p&gt;

&lt;p&gt;Use &lt;code&gt;Make&lt;/code&gt;, check the version number in &lt;code&gt;setup.py&lt;/code&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;make build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;make upload&lt;/code&gt; - ensure you have logged into &lt;code&gt;pip&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;from jtos.jtos import JTOS

js = JTOS()

parsed = js.parse_object(obj)

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;schema&#34;&gt;Schema&lt;/h2&gt;

&lt;h3 id=&#34;select&#34;&gt;Select&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;select&amp;quot;: {
    &amp;quot;tables&amp;quot;: [],
    &amp;quot;fields&amp;quot;: []
   }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;joins&#34;&gt;Joins&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;join&amp;quot;: {
    &amp;quot;type&amp;quot;: &amp;quot;LEFT | RIGHT etc&amp;quot;,
    &amp;quot;conditions&amp;quot;:{
      &amp;quot;from&amp;quot;: {
        &amp;quot;table&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;field&amp;quot;: &amp;quot;&amp;quot;
      },
      &amp;quot;to&amp;quot;: {
        &amp;quot;table&amp;quot;: &amp;quot;&amp;quot;,
        &amp;quot;field&amp;quot;: &amp;quot;&amp;quot;
      }
    } 
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;where-conditions&#34;&gt;Where Conditions&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;where&amp;quot;: [
    {
      &amp;quot;field&amp;quot;: &amp;quot;&amp;quot;,
      &amp;quot;op&amp;quot;: &amp;lt;op&amp;gt;,
      &amp;quot;val&amp;quot;: &amp;quot;&amp;quot;,
      &amp;quot;join&amp;quot;: &amp;quot;o|a&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE: An operator should only be included from the second index and it will be prepended to the built string&lt;/p&gt;

&lt;h3 id=&#34;ordering&#34;&gt;Ordering&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;select&amp;quot;:{
    ...,
    &amp;quot;orderBy&amp;quot;: {
      &amp;quot;&amp;lt;field&amp;gt;&amp;quot;: &amp;quot;ASC|DESC&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;grouping&#34;&gt;Grouping&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;select&amp;quot;:{
    ...,
    &amp;quot;groupBy&amp;quot;: [
      &amp;quot;&amp;lt;field&amp;gt;&amp;quot;
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;paging&#34;&gt;Paging&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;limit&amp;quot;: 100,
  &amp;quot;offset&amp;quot;: 3
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;insert&#34;&gt;Insert&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;insert&amp;quot;: {
    &amp;quot;table&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;values&amp;quot;: {
      &amp;quot;&amp;lt;field&amp;gt;&amp;quot;: &amp;quot;&amp;lt;value&amp;gt;&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;operations&#34;&gt;Operations&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;gt - &amp;gt;&lt;/li&gt;
&lt;li&gt;lt - &amp;lt;&lt;/li&gt;
&lt;li&gt;gte - &amp;gt;=&lt;/li&gt;
&lt;li&gt;lte - &amp;lt;=&lt;/li&gt;
&lt;li&gt;e - =&lt;/li&gt;
&lt;li&gt;ne - !=&lt;/li&gt;
&lt;li&gt;l - LIKE&lt;/li&gt;
&lt;li&gt;nl - NOT LIKE&lt;/li&gt;
&lt;li&gt;a - AND&lt;/li&gt;
&lt;li&gt;a - OR&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;notes&#34;&gt;Notes&lt;/h2&gt;

&lt;p&gt;This does &lt;strong&gt;no&lt;/strong&gt; authentication or validation,
it just blindly trusts the tests.&lt;/p&gt;

&lt;p&gt;Do not run on production unless you are comfortable with it in your test environment first&lt;/p&gt;

&lt;h2 id=&#34;contributing&#34;&gt;Contributing&lt;/h2&gt;

&lt;p&gt;Tests, please! But also any work on Upserts or Delete are also greatly appreciated&lt;/p&gt;

&lt;h2 id=&#34;todo&#34;&gt;TODO&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Select&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Where&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Joins&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Insert&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Upsert (this syntax is quite different so maybe needs a different parser)&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Delete&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Examples are included in the &lt;code&gt;tests&lt;/code&gt; directory&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: C3S API</title>
      <link>https://docs.citizenscience.ch/docs/components/backend/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/backend/api/</guid>
      <description>
        
        
        

&lt;h1 id=&#34;c3s-api&#34;&gt;C3S API v3.1.0&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An API for creating, running and analysing citizen science projects&lt;/p&gt;

&lt;p&gt;Base URLs:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://staging.citizenscience.ch/v3&#34;&gt;https://staging.citizenscience.ch/v3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://api.citizenscience.ch/v3&#34;&gt;https://api.citizenscience.ch/v3&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;authentication&#34;&gt;Authentication&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;API Key (anonUser)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parameter Name: &lt;strong&gt;X-ANON&lt;/strong&gt;, in: header.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;API Key (apiKeyHeader)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parameter Name: &lt;strong&gt;X-API-KEY&lt;/strong&gt;, in: header.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;oAuth2 authentication.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flow: implicit&lt;/li&gt;
&lt;li&gt;Authorization URL = &lt;a href=&#34;http://localhost:8081/oauth/authorize&#34;&gt;http://localhost:8081/oauth/authorize&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Scope&lt;/th&gt;
&lt;th&gt;Scope Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;apiKey&lt;/td&gt;
&lt;td&gt;Unique identifier of the user accessing the service.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&#34;c3s-api-comments&#34;&gt;Comments&lt;/h1&gt;

&lt;h2 id=&#34;get-a-single-comment&#34;&gt;Get a single comment&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_comment&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/comments/{cid}&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/comments/{cid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /comments/{cid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-a-single-comment-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;parent&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-a-single-comment-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return comment&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Comment does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-a-single-comment-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» parent&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;The task or project (or anything with an ID) it is related to&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader, anonUser
&lt;/aside&gt;

&lt;h2 id=&#34;post-a-comment&#34;&gt;Post a comment&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcreate_comment&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/comments&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/comments&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /comments&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;parent&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-a-comment-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1comments/post/requestbody&#34;&gt;#/paths/~1comments/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» parent&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The task or project (or anything with an ID) it is related to&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;201 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;parent&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-a-comment-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Comment created&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;409&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.8&#34;&gt;Conflict&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Comment already exists&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;post-a-comment-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;201&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» parent&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;The task or project (or anything with an ID) it is related to&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader, anonUser
&lt;/aside&gt;

&lt;h2 id=&#34;remove-a-comment&#34;&gt;Remove a Comment&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIddelete_comment&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/comments/{cid}&#39;,
  method: &#39;delete&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.delete(&#39;https://staging.citizenscience.ch/v3/comments/{cid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DELETE /comments/{cid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;remove-a-comment-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;remove-a-comment-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.5&#34;&gt;No Content&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Comment was deleted&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Comment does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;modify-create-a-comment&#34;&gt;Modify/Create a Comment&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdupdate_comment&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/comments/{cid}&#39;,
  method: &#39;put&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.put(&#39;https://staging.citizenscience.ch/v3/comments/{cid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;PUT /comments/{cid}&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;parent&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;modify/create-a-comment-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1comments/post/requestbody&#34;&gt;#/paths/~1comments/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» parent&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The task or project (or anything with an ID) it is related to&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;modify/create-a-comment-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Comment modified&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;New Comment created&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h1 id=&#34;c3s-api-media&#34;&gt;Media&lt;/h1&gt;

&lt;h2 id=&#34;get-media&#34;&gt;get_media&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_media&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/media&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/media&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /media&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Get a list of media&lt;/p&gt;

&lt;h3 id=&#34;get_media-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;search_term&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;limit&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get_media-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of media&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;create-medium&#34;&gt;create_medium&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcreate_medium&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/media&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/media&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /media&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The media details (for files already on the server or remotely hosted)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;filetype&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;path&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create_medium-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1media/post/requestbody&#34;&gt;#/paths/~1media/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» filetype&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;Name of file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» path&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;Local or remote path&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The task or project or user it is related to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;create_medium-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Media attached&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-for-source&#34;&gt;get_for_source&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_for_source&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/media/source/{sid}&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/media/source/{sid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /media/source/{sid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get_for_source-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;Source ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get_for_source-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Media attached&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader, anonUser
&lt;/aside&gt;

&lt;h2 id=&#34;return-pre-authorised-url-to-upload-media&#34;&gt;Return pre-authorised url to upload media&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_pre_signed_url&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/media/upload&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/media/upload&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /media/upload&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;return-pre-authorised-url-to-upload-media-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;source_id&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;filename&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;return-pre-authorised-url-to-upload-media-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return presigned url&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;401&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7235#section-3.1&#34;&gt;Unauthorized&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User does not have uploading access&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;delete-all-media-files-related-to-source&#34;&gt;Delete all media files related to  source&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIddelete_medium&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/media/{mid}&#39;,
  method: &#39;delete&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.delete(&#39;https://staging.citizenscience.ch/v3/media/{mid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DELETE /media/{mid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;delete-all-media-files-related-to--source-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;delete-all-media-files-related-to--source-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Media deleted&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Media does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-single-medium&#34;&gt;Get single medium&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_medium&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/media/{mid}&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/media/{mid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /media/{mid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-single-medium-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;filetype&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;path&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-single-medium-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return Media&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Media does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-single-medium-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» filetype&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;Name of file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;Local or remote path&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;The task or project or user it is related to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;put-a-single-file&#34;&gt;Put a single file&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdupdate_medium&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/media/{mid}&#39;,
  method: &#39;put&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.put(&#39;https://staging.citizenscience.ch/v3/media/{mid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;PUT /media/{mid}&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;filetype&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;path&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;put-a-single-file-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;mid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1media/post/requestbody&#34;&gt;#/paths/~1media/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» filetype&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;Name of file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» path&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;Local or remote path&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The task or project or user it is related to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;201 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;filetype&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;path&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;source_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;put-a-single-file-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return Media&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Media does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;put-a-single-file-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;201&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» filetype&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;Name of file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;Local or remote path&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» source_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;The task or project or user it is related to&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h1 id=&#34;c3s-api-projectgroups&#34;&gt;ProjectGroups&lt;/h1&gt;

&lt;h2 id=&#34;list-project-groups&#34;&gt;List Project Groups&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_project_groups&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projectgroups&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projectgroups&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projectgroups&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;list-project-groups-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;search&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;limit&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;offset&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;list-project-groups-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return project groups&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project group does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h1 id=&#34;c3s-api-projects&#34;&gt;Projects&lt;/h1&gt;

&lt;h2 id=&#34;get-all-projects&#34;&gt;Get all projects&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_projects&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-all-projects-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;search_term&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;limit&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;owned_by&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-all-projects-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return projects&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-all-projects-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» description&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» owned_by&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;The ID of the user that this project is owned by&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;post-a-project&#34;&gt;Post a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcreate_project&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/projects&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /projects&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;description&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;owned_by&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1projects/post/requestbody&#34;&gt;#/paths/~1projects/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» description&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» owned_by&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;The ID of the user that this project is owned by&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;post-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;New project created&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;409&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.8&#34;&gt;Conflict&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project already exists&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-row-count-of-query&#34;&gt;Get row count of query&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_project_count&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/count&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects/count&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects/count&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-row-count-of-query-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;search_term&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-row-count-of-query-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Row count&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;remove-a-project&#34;&gt;Remove a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIddelete_project&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}&#39;,
  method: &#39;delete&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.delete(&#39;https://staging.citizenscience.ch/v3/projects/{pid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DELETE /projects/{pid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;remove-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;remove-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.5&#34;&gt;No Content&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project was deleted&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-a-single-project&#34;&gt;Get a single project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_project&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects/{pid}&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects/{pid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-a-single-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-a-single-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return project&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;modify-create-a-project&#34;&gt;Modify/Create a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdupdate_project&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}&#39;,
  method: &#39;put&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.put(&#39;https://staging.citizenscience.ch/v3/projects/{pid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;PUT /projects/{pid}&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;description&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;owned_by&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;modify/create-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1projects/post/requestbody&#34;&gt;#/paths/~1projects/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» description&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» owned_by&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;The ID of the user that this project is owned by&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;modify/create-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project modified&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;New project created&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;import-tasks-for-a-project&#34;&gt;Import Tasks for a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdimport_csv&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}/import/csv&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/projects/{pid}/import/csv&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /projects/{pid}/import/csv&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;import-tasks-for-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The Project ID&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;array&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;CSV file content&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;import-tasks-for-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Tasks imported&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;401&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7235#section-3.1&#34;&gt;Unauthorized&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unauthorised&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;get-the-statistics-for-a-project&#34;&gt;Get the statistics for a Project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_stats&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}/stats&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects/{pid}/stats&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects/{pid}/stats&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-the-statistics-for-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The Project ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-the-statistics-for-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return project statistics&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;get-the-submissions-for-a-project&#34;&gt;Get the submissions for a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_project_submissions&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}/submissions&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects/{pid}/submissions&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects/{pid}/submissions&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-the-submissions-for-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The Project ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-the-submissions-for-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return project submissions&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;get-user-submissions-for-a-project&#34;&gt;Get user submissions for a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_project_user_submissions&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}/submissions/{uid}&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects/{pid}/submissions/{uid}&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects/{pid}/submissions/{uid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-user-submissions-for-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The Project ID&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;uid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;User ID for specific user submissions&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-user-submissions-for-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return project submissions&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;get-a-task-for-a-project&#34;&gt;Get a task for a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_random_project_task&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}/task&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects/{pid}/task&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects/{pid}/task&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-a-task-for-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The Project ID&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-a-task-for-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return random project task&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;get-the-tasks-for-a-project&#34;&gt;Get the tasks for a project&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_project_tasks&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/projects/{pid}/tasks&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/projects/{pid}/tasks&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /projects/{pid}/tasks&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-the-tasks-for-a-project-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The Project ID&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;limit&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;offset&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-the-tasks-for-a-project-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return project tasks&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Project does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h1 id=&#34;c3s-api-submissions&#34;&gt;Submissions&lt;/h1&gt;

&lt;h2 id=&#34;remove-a-submission&#34;&gt;Remove a submission&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIddelete_submission&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/submission/{sid}&#39;,
  method: &#39;delete&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.delete(&#39;https://staging.citizenscience.ch/v3/submission/{sid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DELETE /submission/{sid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;remove-a-submission-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;remove-a-submission-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.5&#34;&gt;No Content&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Submission was deleted&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Submission does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-a-single-submission&#34;&gt;Get a single submission&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_submission&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/submission/{sid}&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/submission/{sid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /submission/{sid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-a-single-submission-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;task_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-a-single-submission-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return submission&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Submission does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-a-single-submission-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» task_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;modify-create-a-submission&#34;&gt;Modify/Create a submission&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdupdate_submission&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/submission/{sid}&#39;,
  method: &#39;put&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.put(&#39;https://staging.citizenscience.ch/v3/submission/{sid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;PUT /submission/{sid}&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;task_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;modify/create-a-submission-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1submission~1%7bsid%7d/put/requestbody&#34;&gt;#/paths/~1submission~1%7Bsid%7D/put/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» task_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;modify/create-a-submission-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Submission modified&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;New submission created&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-all-submissions&#34;&gt;Get all submissions&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_submissions&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/submissions&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/submissions&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /submissions&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-all-submissions-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;search_term&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;limit&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;content&amp;quot;: {},
    &amp;quot;task_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-all-submissions-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of submissions&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-all-submissions-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» task_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;post-a-submission&#34;&gt;Post a submission&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcreate_submission&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/submissions&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/submissions&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /submissions&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;task_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-a-submission-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1submission~1%7bsid%7d/put/requestbody&#34;&gt;#/paths/~1submission~1%7Bsid%7D/put/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» task_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;201 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;task_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-a-submission-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Submission created&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;post-a-submission-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;201&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» task_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader, anonUser
&lt;/aside&gt;

&lt;h2 id=&#34;get-row-count-of-query-1&#34;&gt;Get row count of query&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_submission_count&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/submissions/count&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/submissions/count&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /submissions/count&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-row-count-of-query-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;search_term&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-row-count-of-query-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Row count&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h1 id=&#34;c3s-api-tasks&#34;&gt;Tasks&lt;/h1&gt;

&lt;h2 id=&#34;post-a-single-task&#34;&gt;Post a single task&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcreate_task&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/task&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/task&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /task&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;project_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;required&amp;quot;: true,
  &amp;quot;sequence&amp;quot;: 0,
  &amp;quot;title&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-a-single-task-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1task/post/requestbody&#34;&gt;#/paths/~1task/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» project_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» required&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» sequence&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» title&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;201 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;content&amp;quot;: {},
    &amp;quot;project_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;required&amp;quot;: true,
    &amp;quot;sequence&amp;quot;: 0,
    &amp;quot;title&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-a-single-task-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Task created&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;post-a-single-task-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;201&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» project_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» required&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» sequence&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» title&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-a-list-of-tasks&#34;&gt;Get a list of tasks&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_tasks&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/tasks&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /tasks&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-a-list-of-tasks-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;offset&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;number&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;search_term&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;limit&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;content&amp;quot;: {},
    &amp;quot;project_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;required&amp;quot;: true,
    &amp;quot;sequence&amp;quot;: 0,
    &amp;quot;title&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-a-list-of-tasks-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of tasks&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-a-list-of-tasks-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» project_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» required&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» sequence&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» title&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader, anonUser
&lt;/aside&gt;

&lt;h2 id=&#34;post-an-array-of-tasks&#34;&gt;Post an array of tasks&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcreate_tasks&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/tasks&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /tasks&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;content&amp;quot;: {},
    &amp;quot;project_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;required&amp;quot;: true,
    &amp;quot;sequence&amp;quot;: 0,
    &amp;quot;title&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {}
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-an-array-of-tasks-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;array[object]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;List of tasks&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;201 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;content&amp;quot;: {},
    &amp;quot;project_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;required&amp;quot;: true,
    &amp;quot;sequence&amp;quot;: 0,
    &amp;quot;title&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-an-array-of-tasks-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Task created&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;post-an-array-of-tasks-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;201&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» project_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» required&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» sequence&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» title&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-row-count-of-query-2&#34;&gt;Get row count of query&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_task_count&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks/count&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/tasks/count&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /tasks/count&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-row-count-of-query-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;search_term&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-row-count-of-query-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Row count&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;delete-a-single-task-warning-this-will-also-disassociate-all-submissions-for-the-task&#34;&gt;Delete a single task. WARNING - This will also disassociate all submissions for the task&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIddelete_task&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks/{tid}&#39;,
  method: &#39;delete&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.delete(&#39;https://staging.citizenscience.ch/v3/tasks/{tid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DELETE /tasks/{tid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;delete-a-single-task.-warning---this-will-also-disassociate-all-submissions-for-the-task-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;delete-a-single-task.-warning---this-will-also-disassociate-all-submissions-for-the-task-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;204&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.5&#34;&gt;No Content&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Task was deleted&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-a-single-task&#34;&gt;Get a single task&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_task&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks/{tid}&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/tasks/{tid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /tasks/{tid}&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-a-single-task-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for an Object (i.e. User, Task, Project, Submission etc)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;project_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;required&amp;quot;: true,
  &amp;quot;sequence&amp;quot;: 0,
  &amp;quot;title&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-a-single-task-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return task&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Task does not exist&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-a-single-task-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» project_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» required&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» sequence&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» title&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader, anonUser
&lt;/aside&gt;

&lt;h2 id=&#34;modify-create-a-task&#34;&gt;Modify/Create a task&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdupdate_task&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks/{tid}&#39;,
  method: &#39;put&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.put(&#39;https://staging.citizenscience.ch/v3/tasks/{tid}&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;PUT /tasks/{tid}&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;content&amp;quot;: {},
  &amp;quot;project_id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;required&amp;quot;: true,
  &amp;quot;sequence&amp;quot;: 0,
  &amp;quot;title&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;modify/create-a-task-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for the Task&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1task/post/requestbody&#34;&gt;#/paths/~1task/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» project_id&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» required&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» sequence&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» title&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;modify/create-a-task-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;New task created&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-statistics-for-a-specific-task&#34;&gt;Get statistics for a specific task&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_stats&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks/{tid}/stats&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/tasks/{tid}/stats&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /tasks/{tid}/stats&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-statistics-for-a-specific-task-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-statistics-for-a-specific-task-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Stats for task submissions&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-statistics-for-a-specific-task-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-submissions-for-a-specific-task&#34;&gt;Get submissions for a specific task&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_task_submissions&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/tasks/{tid}/submissions&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/tasks/{tid}/submissions&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /tasks/{tid}/submissions&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-submissions-for-a-specific-task-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;tid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;limit&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;offset&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;content&amp;quot;: {},
    &amp;quot;task_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-submissions-for-a-specific-task-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;List of submissions&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-submissions-for-a-specific-task-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» task_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h1 id=&#34;c3s-api-users&#34;&gt;Users&lt;/h1&gt;

&lt;h2 id=&#34;post-auth-for-token-response&#34;&gt;Post auth for token response&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdgenerate&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/authorize&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/users/authorize&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /users/authorize&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;anonymous&amp;quot;: false,
  &amp;quot;api_key&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;email&amp;quot;: &amp;quot;user@example.com&amp;quot;,
  &amp;quot;pwd&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;username&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;post-auth-for-token-response-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1users~1authorize/post/requestbody&#34;&gt;#/paths/~1users~1authorize/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» anonymous&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» api_key&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» email&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string(email)&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» pwd&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» username&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;post-auth-for-token-response-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Token created&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;check-existence-of-user&#34;&gt;Check existence of user&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcheck_user&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/check&#39;,
  method: &#39;get&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/users/check&#39;, params={

)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /users/check&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;check-existence-of-user-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;email&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;username&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;check-existence-of-user-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User exists&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User not found&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;allow-a-user-to-login&#34;&gt;Allow a user to login&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdlogin&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/login&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/users/login&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /users/login&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;anonymous&amp;quot;: false,
  &amp;quot;api_key&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;email&amp;quot;: &amp;quot;user@example.com&amp;quot;,
  &amp;quot;pwd&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;username&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;allow-a-user-to-login-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1users~1authorize/post/requestbody&#34;&gt;#/paths/~1users~1authorize/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» anonymous&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» api_key&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» email&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string(email)&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» pwd&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» username&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;allow-a-user-to-login-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Login successful&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;401&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7235#section-3.1&#34;&gt;Unauthorized&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Incorrect login details&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User not found&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;delete-user-only-allowed-by-the-user-themselves&#34;&gt;Delete user (only allowed by the user themselves)&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIddelete_user&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/me&#39;,
  method: &#39;delete&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.delete(&#39;https://staging.citizenscience.ch/v3/users/me&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;DELETE /users/me&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;delete-user-(only-allowed-by-the-user-themselves)-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User deleted&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;401&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7235#section-3.1&#34;&gt;Unauthorized&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Not authorised&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User not found&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-logged-in-user&#34;&gt;Get logged in user&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_user&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/me&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/users/me&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /users/me&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;anonymous&amp;quot;: false,
  &amp;quot;api_key&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;email&amp;quot;: &amp;quot;user@example.com&amp;quot;,
  &amp;quot;pwd&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;username&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-logged-in-user-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return user&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User not found&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-logged-in-user-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» anonymous&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» api_key&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» email&lt;/td&gt;
&lt;td&gt;string(email)&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» pwd&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» username&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;update-user-details-change-password-add-details-etc&#34;&gt;Update user details (change password, add details etc)&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdupdate_user&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;,
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/me&#39;,
  method: &#39;put&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;,
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.put(&#39;https://staging.citizenscience.ch/v3/users/me&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;PUT /users/me&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;anonymous&amp;quot;: true,
  &amp;quot;api_key&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;email&amp;quot;: &amp;quot;user@example.com&amp;quot;,
  &amp;quot;pwd&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;username&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-user-details-(change-password,-add-details-etc)-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;The unique identifer for a User&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» anonymous&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» api_key&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» email&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string(email)&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» pwd&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» username&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;anonymous&amp;quot;: false,
  &amp;quot;api_key&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;email&amp;quot;: &amp;quot;user@example.com&amp;quot;,
  &amp;quot;pwd&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;username&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
  &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {},
  &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-user-details-(change-password,-add-details-etc)-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User updated&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User not found&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;update-user-details-(change-password,-add-details-etc)-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Â» anonymous&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» api_key&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» email&lt;/td&gt;
&lt;td&gt;string(email)&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» pwd&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» username&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-all-projects-for-a-user&#34;&gt;Get all projects for a user&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_user_projects&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/me/projects&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/users/me/projects&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /users/me/projects&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-all-projects-for-a-user-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;uid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;description&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;name&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;owned_by&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-all-projects-for-a-user-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return Projects&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User not found&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-all-projects-for-a-user-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» description&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» name&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» owned_by&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;The ID of the user that this project is owned by&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;get-all-submissions-for-a-user&#34;&gt;Get all submissions for a user&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdget_user_submissions&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;,
  &#39;X-API-KEY&#39;:&#39;API_KEY&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/me/submissions&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;,
  &#39;X-API-KEY&#39;: &#39;API_KEY&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/users/me/submissions&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /users/me/submissions&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;get-all-submissions-for-a-user-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;uid&lt;/td&gt;
&lt;td&gt;path&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;[
  {
    &amp;quot;content&amp;quot;: {},
    &amp;quot;task_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;user_id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;created_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;,
    &amp;quot;id&amp;quot;: &amp;quot;string&amp;quot;,
    &amp;quot;info&amp;quot;: {},
    &amp;quot;updated_at&amp;quot;: &amp;quot;2015-07-07T13:49:51.230000Z&amp;quot;
  }
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;get-all-submissions-for-a-user-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Return submissions&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;404&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.4&#34;&gt;Not Found&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User not found&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;get-all-submissions-for-a-user-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;p&gt;Status Code &lt;strong&gt;200&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Restrictions&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;anonymous&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;[allOf]&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» content&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» task_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» user_id&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;warning&#34;&gt;
To perform this operation, you must be authenticated by means of one of the following methods:
apiKeyHeader
&lt;/aside&gt;

&lt;h2 id=&#34;registration-end-point-for-a-user-account&#34;&gt;Registration end point for a user account&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdcreate_user&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/register&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/users/register&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /users/register&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;anonymous&amp;quot;: false,
  &amp;quot;api_key&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;email&amp;quot;: &amp;quot;user@example.com&amp;quot;,
  &amp;quot;pwd&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;username&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;registration-end-point-for-a-user-account-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1users~1authorize/post/requestbody&#34;&gt;#/paths/~1users~1authorize/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» anonymous&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» api_key&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» email&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string(email)&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» pwd&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» username&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;registration-end-point-for-a-user-account-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;201&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.2&#34;&gt;Created&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Created user&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;409&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.5.8&#34;&gt;Conflict&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;User exists&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;reset-user-password&#34;&gt;Reset user password&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdreset&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/reset&#39;,
  method: &#39;get&#39;,
  data: &#39;?email=string&#39;,

  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests

r = requests.get(&#39;https://staging.citizenscience.ch/v3/users/reset&#39;, params={
  &#39;email&#39;: &#39;string&#39;
)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /users/reset&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;reset-user-password-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;email&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;reset-user-password-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Password reset&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;verify-password-reset-token&#34;&gt;Verify password reset token&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdverify_reset&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Content-Type&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/reset&#39;,
  method: &#39;post&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Content-Type&#39;: &#39;application/json&#39;
}

r = requests.post(&#39;https://staging.citizenscience.ch/v3/users/reset&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;POST /users/reset&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Body parameter&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;anonymous&amp;quot;: false,
  &amp;quot;api_key&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;email&amp;quot;: &amp;quot;user@example.com&amp;quot;,
  &amp;quot;pwd&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;username&amp;quot;: &amp;quot;string&amp;quot;,
  &amp;quot;info&amp;quot;: {}
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;verify-password-reset-token-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;#schema#/paths/~1users~1authorize/post/requestbody&#34;&gt;#/paths/~1users~1authorize/post/requestBody&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» anonymous&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» api_key&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» email&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string(email)&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» pwd&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Â» username&lt;/td&gt;
&lt;td&gt;body&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;verify-password-reset-token-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Verified and reset&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;401&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7235#section-3.1&#34;&gt;Unauthorized&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Unauthorised user&lt;/td&gt;
&lt;td&gt;None&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

&lt;h2 id=&#34;oauth2-token-info&#34;&gt;OAuth2 token info&lt;/h2&gt;

&lt;p&gt;&lt;a id=&#34;opIdvalidate&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Code samples&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var headers = {
  &#39;Accept&#39;:&#39;application/json&#39;

};

$.ajax({
  url: &#39;https://staging.citizenscience.ch/v3/users/validate&#39;,
  method: &#39;get&#39;,

  headers: headers,
  success: function(data) {
    console.log(JSON.stringify(data));
  }
})

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import requests
headers = {
  &#39;Accept&#39;: &#39;application/json&#39;
}

r = requests.get(&#39;https://staging.citizenscience.ch/v3/users/validate&#39;, params={

}, headers = headers)

print r.json()

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;GET /users/validate&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;oauth2-token-info-parameters&#34;&gt;Parameters&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;In&lt;/th&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Required&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;key&lt;/td&gt;
&lt;td&gt;query&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;td&gt;none&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
&lt;p&gt;Example responses&lt;/p&gt;

&lt;p&gt;200 Response&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;oauth2-token-info-responses&#34;&gt;Responses&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Status&lt;/th&gt;
&lt;th&gt;Meaning&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Schema&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7231#section-6.3.1&#34;&gt;OK&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Token info object&lt;/td&gt;
&lt;td&gt;Inline&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;oauth2-token-info-responseschema&#34;&gt;Response Schema&lt;/h3&gt;

&lt;aside class=&#34;success&#34;&gt;
This operation does not require authentication
&lt;/aside&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Docker</title>
      <link>https://docs.citizenscience.ch/docs/deployment/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/deployment/docker/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;registry&#34;&gt;Registry&lt;/h2&gt;

&lt;p&gt;Docker images can be pushed to: &lt;a href=&#34;https://registry.citizenscience.ch&#34;&gt;https://registry.citizenscience.ch&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Login details are in the &lt;code&gt;meta&lt;/code&gt; repository and encrypted using &lt;code&gt;git secret&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Hatespeech</title>
      <link>https://docs.citizenscience.ch/docs/components/frontend/sites/hatespeech/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/frontend/sites/hatespeech/</guid>
      <description>
        
        
        &lt;p&gt;Contact Person: &lt;a href=&#34;mailto:simone@ueberwasser.eu&#34;&gt;Simone Ueberwasser&lt;/a&gt;
API Version: v2
Deployment Method: now&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Kubernetes</title>
      <link>https://docs.citizenscience.ch/docs/deployment/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/deployment/kubernetes/</guid>
      <description>
        
        
        

&lt;p&gt;All services that are not static sites can be deployed using Kubernetes.&lt;/p&gt;

&lt;p&gt;This does not need to be done directly and can be handled using &lt;a href=&#34;https://github.com/citizensciencecenter/autodeploy&#34;&gt;Autodeploy&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;autodeploy&#34;&gt;Autodeploy&lt;/h2&gt;

&lt;h3 id=&#34;running&#34;&gt;Running&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;go run auto.go&lt;/code&gt; - exposes on port 9898&lt;/p&gt;

&lt;h2 id=&#34;what-am-i&#34;&gt;What Am I?&lt;/h2&gt;

&lt;p&gt;A script/go server that can receive webhooks from CI services (currently only Travis) and build docker images from
the repo to deploy into Kubernetes using &lt;code&gt;envsubst&lt;/code&gt; (not Helm)&lt;/p&gt;

&lt;h2 id=&#34;what-do-i-need&#34;&gt;What Do I Need?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;To host this somewhere in your infra that has access to the following:

&lt;ul&gt;
&lt;li&gt;Your Git repos&lt;/li&gt;
&lt;li&gt;Your Docker registry configured in the shell&lt;/li&gt;
&lt;li&gt;Your K8S instance (with kubectl configured)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;A webhook configured in your CI system&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A &lt;code&gt;.autodeploy&lt;/code&gt; that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
&amp;quot;name&amp;quot;: &amp;quot;citizenscience&amp;quot;,
&amp;quot;subdomain&amp;quot;: false,
&amp;quot;port&amp;quot;: 80
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;what-can-it-do&#34;&gt;What Can It Do?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;Pull latest changes from git (based on branch tested)&lt;/li&gt;
&lt;li&gt;Build docker image and tag with commit hash and branch name&lt;/li&gt;
&lt;li&gt;Push docker image to your registry&lt;/li&gt;
&lt;li&gt;Create a deployment file for k8s and auto set up ingresses (certificates must be set up by you, see &lt;code&gt;env-deploy.yaml&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Deploy to K8S and save output of file to &lt;code&gt;ran&lt;/code&gt; folder&lt;/li&gt;
&lt;li&gt;Notify webhook of success and failures&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;

&lt;h3 id=&#34;git-fails-with-ssh-auth-sock&#34;&gt;Git fails with &lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;This is probably because your shell cannot find the ssh-agent or the path to the socket file is wrong.&lt;/p&gt;

&lt;h4 id=&#34;to-fix&#34;&gt;To Fix&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ eval `ssh-agent`
$ ssh-add
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;docker-fails-to-build&#34;&gt;Docker fails to build&lt;/h3&gt;

&lt;p&gt;Probably you need to add your user to the Docker group or, and this is &lt;strong&gt;NOT&lt;/strong&gt; recommended, you can run as sudo&lt;/p&gt;

&lt;h3 id=&#34;docker-fails-to-push-to-a-registry&#34;&gt;Docker fails to push to a registry&lt;/h3&gt;

&lt;p&gt;First, make sure you have a registry set and then make sure your auth credentials have been provided with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ docker login &amp;lt;REGISTRY&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;todo&#34;&gt;TODO&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Handle args for config paths&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Allow selection of default build steps&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Git - handle initialising submodules&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Git -  fetch branches before searching&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Docker - Print errors to users when command fails&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Config - enable or disable stdout&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; K8S - create env file and pass to deploy&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Webhook - Notification of stages&lt;/label&gt;&lt;/li&gt;
&lt;li&gt;&lt;label&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Better error handling and detection, no silent failures&lt;/label&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Mustelid</title>
      <link>https://docs.citizenscience.ch/docs/components/frontend/sites/mustelid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/frontend/sites/mustelid/</guid>
      <description>
        
        
        &lt;p&gt;Contact Person: &lt;a href=&#34;adrian.dietrich@swild.ch&#34;&gt;Adrian Dietrich&lt;/a&gt;
API Version: v2
Deployment Method: now&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: UZH Science Cloud</title>
      <link>https://docs.citizenscience.ch/docs/deployment/science_cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/deployment/science_cloud/</guid>
      <description>
        
        
        

&lt;p&gt;The Citizen Science Center has a set of Virtual Servers running inside the UZH ScienceCloud, you will need to ask for permission to access the instances.&lt;/p&gt;

&lt;p&gt;The project is &lt;code&gt;cccs.uzh&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&#34;servers&#34;&gt;Servers&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;c3s-prodapi - &lt;code&gt;api.citizenscience.ch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;production_db - Used by &lt;code&gt;c3s-prodapi&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;staging - &lt;code&gt;staging.citizenscience.ch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;wenker - &lt;code&gt;wenker.citizenscience.ch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;s3 - &lt;code&gt;objects.citizenscience.ch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;gl-runner - Runner used by &lt;code&gt;gitlab.uzh.ch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;c3s-tools - Running our RocketChat instance and some other utilities&lt;/li&gt;
&lt;li&gt;deploy - Running the &lt;code&gt;autodeploy&lt;/code&gt; code to deploy into K8S or Openshift&lt;/li&gt;
&lt;li&gt;pybossa - Running &lt;code&gt;pb.citizenscience.ch&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;data&#34;&gt;Data&lt;/h1&gt;

&lt;p&gt;All backups are currently inside ScienceCloud and there is no external backup provider.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Secrets and Passwords</title>
      <link>https://docs.citizenscience.ch/docs/deployment/secrets_and_passwords/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/deployment/secrets_and_passwords/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;github&#34;&gt;Github&lt;/h2&gt;

&lt;p&gt;You will need to become a member of the &lt;code&gt;CitizenScienceCenter&lt;/code&gt; organization on Github. Ask one of the existing members for them to approve your access.&lt;/p&gt;

&lt;h2 id=&#34;secrets-and-files-in-git-repositories-with-sensitive-information&#34;&gt;Secrets and Files in Git Repositories with Sensitive Information&lt;/h2&gt;

&lt;p&gt;We use &lt;a href=&#34;git-secret.io&#34;&gt;git secret&lt;/a&gt; to handle this and you can find install info &lt;a href=&#34;https://git-secret.io/installation&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;adding-yourself-to-the-git-secret&#34;&gt;Adding yourself to the &lt;code&gt;git secret&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;You will need to ask someone who is already on the repository and send them your public GPG key&lt;/p&gt;

&lt;p&gt;That person can then run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --import &amp;lt;KEYNAME&amp;gt;
git secret tell &amp;lt;EMAIL&amp;gt;
git secret reveal -f
git secret hide -d
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you will be able to access the encrypted files&lt;/p&gt;

&lt;h2 id=&#34;servers&#34;&gt;Servers&lt;/h2&gt;

&lt;p&gt;All servers on ScienceCloud can only be accessed by providing an SSH key. You will need to ask someone who has access to that server to add your SSH key.&lt;/p&gt;

&lt;h2 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h2&gt;

&lt;p&gt;You will need to extract the &lt;code&gt;kubeconf&lt;/code&gt; from one of the nodes and add it to &lt;code&gt;~/.kube/config&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;openshift&#34;&gt;OpenShift&lt;/h2&gt;

&lt;p&gt;You will need to ask &lt;a href=&#34;mailto:jens-christian.fischer@switch.ch&#34;&gt;Jens-Christian&lt;/a&gt; to be added to the &lt;code&gt;C3S&lt;/code&gt; project on &lt;code&gt;SwitchEngines&lt;/code&gt;. Once, you have access, you will be able to use the &lt;code&gt;OpenShift&lt;/code&gt; interface OR click on your user in the top right of the interface and select &lt;code&gt;copy login&lt;/code&gt;, run that in your CLI and you can then use the &lt;code&gt;oc&lt;/code&gt; tool to interface with OpenShift&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Snakes v1</title>
      <link>https://docs.citizenscience.ch/docs/components/frontend/sites/snakes-v1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/frontend/sites/snakes-v1/</guid>
      <description>
        
        
        &lt;p&gt;Contact Person: &lt;a href=&#34;amdurso@gmail.com&#34;&gt;Andrew Durso&lt;/a&gt;
API Version: v2
Deployment Method: On Wenker server, no longer active&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Snakes v2</title>
      <link>https://docs.citizenscience.ch/docs/components/frontend/sites/snakes-v2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/frontend/sites/snakes-v2/</guid>
      <description>
        
        
        &lt;p&gt;Contact Person: &lt;a href=&#34;amdurso@gmail.com&#34;&gt;Andrew Durso&lt;/a&gt;
API Version: v2
Deployment Method: now&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Vuex-C3S</title>
      <link>https://docs.citizenscience.ch/docs/components/libraries/vuex-c3s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/libraries/vuex-c3s/</guid>
      <description>
        
        
        

&lt;h2 id=&#34;vuex-c3s&#34;&gt;Vuex-C3S&lt;/h2&gt;

&lt;h3 id=&#34;what&#34;&gt;What?&lt;/h3&gt;

&lt;p&gt;A small Vue plugin that integrates into your existing store, providing access to the Citizen Science API and allowing you to sync locally with your Vue site.&lt;/p&gt;

&lt;h2 id=&#34;how&#34;&gt;How&lt;/h2&gt;

&lt;h3 id=&#34;v2-versions-below-1-1-0&#34;&gt;v2 (versions below 1.1.0)&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;npm install --save vuex-c3s&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import c3s from &#39;vuex-c3s&#39;

const swaggerURL = &amp;quot;https://swagger.petstore.io/swagger.json&amp;quot;
Vue.use(c3s.plugin, {store, swaggerURL})

***

user: state =&amp;gt; state.c3s.user.currentUser
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;v3-versions-above-2-0-0-currently-in-beta&#34;&gt;v3 (versions above 2.0.0, currently in &lt;code&gt;beta&lt;/code&gt;)&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;npm install --save-dev vuex-c3s@beta&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;import c3s from &#39;vuex-c3s&#39;

const apiURL = &#39;https://staging.citizenscience.ch/v3/openapi.json&#39;
const server = &#39;https://staging.citizenscience.ch/v3/&#39;
Vue.use(c3s.plugin, {
  store,
  apiURL,
  server
})

***

user: state =&amp;gt; state.c3s.user.currentUser
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;store-structure&#34;&gt;Store Structure&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;NB&lt;/strong&gt;: Below, Store properties are camel case and submodules are title case&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C3S

&lt;ul&gt;
&lt;li&gt;client&lt;/li&gt;
&lt;li&gt;host&lt;/li&gt;
&lt;li&gt;User

&lt;ul&gt;
&lt;li&gt;user&lt;/li&gt;
&lt;li&gt;currentUser&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Project

&lt;ul&gt;
&lt;li&gt;projects&lt;/li&gt;
&lt;li&gt;project&lt;/li&gt;
&lt;li&gt;media&lt;/li&gt;
&lt;li&gt;comments&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Activity

&lt;ul&gt;
&lt;li&gt;activities&lt;/li&gt;
&lt;li&gt;activity&lt;/li&gt;
&lt;li&gt;media&lt;/li&gt;
&lt;li&gt;comments&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Task

&lt;ul&gt;
&lt;li&gt;tasks&lt;/li&gt;
&lt;li&gt;task&lt;/li&gt;
&lt;li&gt;media&lt;/li&gt;
&lt;li&gt;comments&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Media

&lt;ul&gt;
&lt;li&gt;media&lt;/li&gt;
&lt;li&gt;medium&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Comments

&lt;ul&gt;
&lt;li&gt;comments&lt;/li&gt;
&lt;li&gt;comment
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;## Store Methods&lt;/p&gt;

&lt;p&gt;Each module has the following methods available:
 * get&lt;code&gt;Plural&lt;/code&gt;&lt;strong&gt;(&lt;/strong&gt;search&lt;strong&gt;:JSON) - Retrieve all of the model, with a query object
 * get&lt;code&gt;Singular&lt;/code&gt;(&lt;/strong&gt;id&lt;strong&gt;:String) - Retrieve a single model matching the ID
 * create&lt;code&gt;Singular&lt;/code&gt;(&lt;/strong&gt;model&lt;strong&gt;: JSON) - Create an instance of the model
 * update&lt;code&gt;Singular&lt;/code&gt;(&lt;/strong&gt;model**:JSON, &lt;strong&gt;id&lt;/strong&gt;:String) - Update an instance of the model
 * delete&lt;code&gt;Singular&lt;/code&gt;(&lt;strong&gt;id&lt;/strong&gt;:String) - Delete an instance of the model&lt;/p&gt;

&lt;p&gt;e.g.:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;this.$store.dispatch(&#39;c3s/tasks/getTask&#39;, &#39;abc4e6&#39;)
&lt;/code&gt;&lt;/pre&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Wenker</title>
      <link>https://docs.citizenscience.ch/docs/components/frontend/sites/wenker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.citizenscience.ch/docs/components/frontend/sites/wenker/</guid>
      <description>
        
        
        &lt;p&gt;Contact Person: &lt;a href=&#34;elvira.glaser@uzh.ch&#34;&gt;Elvira Glaser&lt;/a&gt;
API Version: v2 (Seperate instance: wenker.citizenscience.ch/api/v2/swagger.json)
Database: Wenker
Deployment Method: Docker Compose on Wenker server.
* Build Docker images
* Push to registry
* Update image name in docker-compose.yml
* Run &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
